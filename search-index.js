crystal_doc_search_index_callback({"repository_name":"bplist","body":"# crystal-bplist\n\n[![Crystal CI](https://github.com/mamantoha/crystal-bplist/actions/workflows/crystal.yml/badge.svg)](https://github.com/mamantoha/crystal-bplist/actions/workflows/crystal.yml)\n[![GitHub release](https://img.shields.io/github/release/mamantoha/crystal-bplist.svg)](https://github.com/mamantoha/crystal-bplist/releases)\n[![Docs](https://img.shields.io/badge/docs-available-brightgreen.svg)](https://mamantoha.github.io/crystal-bplist/)\n[![License](https://img.shields.io/github/license/mamantoha/crystal-bplist.svg)](https://github.com/mamantoha/crystal-bplist/blob/main/LICENSE)\n\nApple's binary property list format implementation in Crystal.\n\n`Bplist` module provides an interface for reading and writing the “property list” files used by Apple, primarily on macOS and iOS.\nThis module supports only binary plist files.\n\nValues can be `nil`, booleans, integers (`Int8`, `Int16`, `Int32`, `Int64`, `Int128`), floats (`Float32`, `Float64`), strings, `Time` objects, `Bytes` (`Slice(UInt8)`), arrays, or hashes (with string keys only).\n\n## Installation\n\n1. Add the dependency to your `shard.yml`:\n\n   ```yaml\n   dependencies:\n     bplist:\n       github: mamantoha/crystal-bplist\n   ```\n\n2. Run `shards install`\n\n## Usage\n\n### `Bplist::Writer`\n\nTransform a Crystal hash into bplist format:\n\n```crystal\nrequire \"bplist\"\n\nhash = {\n  \"ExampleDictionary\" => {\n    \"ExampleDate\" => Time.parse(\"2023-04-01 12:00:00 +00:00\", \"%Y-%m-%d %H:%M:%S %z\", Time::Location::UTC),\n    \"ExampleArray\" => [\n      \"Item 1\",\n      \"Item 2\",\n      \"Item 3\",\n    ],\n  },\n  \"ExampleString\" => \"Hello, world!\",\n  \"ExampleInteger\" => 42,\n  \"ExampleBoolean\" => true,\n}\n\nwriter = Bplist::Writer.new(hash)\nwriter.write_to_file(\"#{__DIR__}/../assets/example_mod.plist\")\n```\n\n```sh\ncrystal ./samples/write.cr\n```\n\n![example.plist](assets/example.plist.png)\n\nRewrite the property list file in XML format:\n\n```sh\nplutil -convert xml1 assets/example_mod.plist -o assets/example_mod.xml\ncat assets/example_mod.xml\n```\n\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\">\n<plist version=\"1.0\">\n<dict>\n  <key>ExampleBoolean</key>\n  <true/>\n  <key>ExampleDictionary</key>\n  <dict>\n    <key>ExampleArray</key>\n    <array>\n      <string>Item 1</string>\n      <string>Item 2</string>\n      <string>Item 3</string>\n    </array>\n    <key>ExampleDate</key>\n    <date>2023-04-01T12:00:00Z</date>\n  </dict>\n  <key>ExampleInteger</key>\n  <integer>42</integer>\n  <key>ExampleString</key>\n  <string>Hello, world!</string>\n</dict>\n</plist>\n```\n\n### `Bplist::Parser`\n\nParse a binary plist file and retrieve a `Bplist::Any` object:\n\n```crystal\nrequire \"bplist\"\n\nbplist = Bplist::Parser.new(\"#{__DIR__}/../assets/example.plist\")\n\nresult = bplist.parse\npp result\n```\n\n```crystal\n{\"ExampleDictionary\" =>\n  {\"ExampleDate\" => 2023-04-01 12:00:00.0 UTC,\n   \"ExampleArray\" => [\"Item 1\", \"Item 2\", \"Item 3\"]},\n \"ExampleString\" => \"Hello, world!\",\n \"ExampleInteger\" => 42,\n \"ExampleBoolean\" => true}\n```\n\n### Reading and modifying Plist\n\nThe `Bplist::Any` object returned by the parser is immutable. To modify plist data, you need to convert it to native Crystal types first.\n\n```crystal\nrequire \"bplist\"\n\n# Read the plist file\nbplist = Bplist::Parser.new(\"config.plist\")\nresult = bplist.parse # Bplist::Any (immutable)\n\n# Convert to modifiable Hash\ndata = result.to_h # Hash(String, Bplist::Any::NativeType) - mutable\n\n# Modify the data\ndata[\"last_modified\"] = Time.utc\ndata[\"version\"] = (data[\"version\"]?.as(Int32) || 0) + 1\ndata[\"new_key\"] = \"new_value\"\n\n# Access and modify nested structures\nif data[\"settings\"]?.is_a?(Hash)\n  settings = data[\"settings\"].as(Hash)\n  settings[\"theme\"] = \"dark\"\n  settings[\"notifications\"] = true\nelse\n  # Create new nested structure\n  data[\"settings\"] = {\n    \"theme\" => \"dark\",\n    \"notifications\" => true,\n    \"auto_save\" => false\n  }\nend\n\n# Write the modified data back to file\nwriter = Bplist::Writer.new(data)\nwriter.write_to_file(\"config.plist\")\n```\n\n## Useful links\n\n- https://medium.com/@karaiskc/understanding-apples-binary-property-list-format-281e6da00dbd\n- https://github.com/opensource-apple/CF/blob/master/CFBinaryPList.c\n- https://docs.python.org/3/library/plistlib.html\n- https://github.com/python/cpython/blob/main/Lib/plistlib.py\n- http://fileformats.archiveteam.org/wiki/Property_List/Binary\n\n## Contributing\n\n1. Fork it (<https://github.com/mamantoha/crystal-bplist/fork>)\n2. Create your feature branch (`git checkout -b my-new-feature`)\n3. Commit your changes (`git commit -am 'Add some feature'`)\n4. Push to the branch (`git push origin my-new-feature`)\n5. Create a new Pull Request\n\n## Contributors\n\n- [Anton Maminov](https://github.com/mamantoha) - creator and maintainer\n","program":{"html_id":"bplist/toplevel","path":"toplevel.html","kind":"module","full_name":"Top Level Namespace","name":"Top Level Namespace","abstract":false,"locations":[],"repository_name":"bplist","program":true,"enum":false,"alias":false,"const":false,"types":[{"html_id":"bplist/Bplist","path":"Bplist.html","kind":"module","full_name":"Bplist","name":"Bplist","abstract":false,"locations":[{"filename":"src/bplist.cr","line_number":4,"url":"https://github.com/mamantoha/crystal-bplist/blob/fd885be48eafe888ea4de58dd97580071a15f2f0/src/bplist.cr#L4"},{"filename":"src/bplist/any.cr","line_number":1,"url":"https://github.com/mamantoha/crystal-bplist/blob/fd885be48eafe888ea4de58dd97580071a15f2f0/src/bplist/any.cr#L1"},{"filename":"src/bplist/helpers.cr","line_number":1,"url":"https://github.com/mamantoha/crystal-bplist/blob/fd885be48eafe888ea4de58dd97580071a15f2f0/src/bplist/helpers.cr#L1"},{"filename":"src/bplist/parser.cr","line_number":1,"url":"https://github.com/mamantoha/crystal-bplist/blob/fd885be48eafe888ea4de58dd97580071a15f2f0/src/bplist/parser.cr#L1"},{"filename":"src/bplist/writer.cr","line_number":1,"url":"https://github.com/mamantoha/crystal-bplist/blob/fd885be48eafe888ea4de58dd97580071a15f2f0/src/bplist/writer.cr#L1"}],"repository_name":"bplist","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"VERSION","name":"VERSION","value":"{{ (`shards version /home/runner/work/crystal-bplist/crystal-bplist/src`).chomp.stringify }}"}],"class_methods":[{"html_id":"parse(input):Bplist::Any-class-method","name":"parse","abstract":false,"args":[{"name":"input","external_name":"input","restriction":""}],"args_string":"(input) : Bplist::Any","args_html":"(input) : <a href=\"Bplist/Any.html\">Bplist::Any</a>","location":{"filename":"src/bplist.cr","line_number":11,"url":"https://github.com/mamantoha/crystal-bplist/blob/fd885be48eafe888ea4de58dd97580071a15f2f0/src/bplist.cr#L11"},"def":{"name":"parse","args":[{"name":"input","external_name":"input","restriction":""}],"return_type":"Bplist::Any","visibility":"Public","body":"(Parser.new(input)).parse"},"external_var":false}],"types":[{"html_id":"bplist/Bplist/Any","path":"Bplist/Any.html","kind":"class","full_name":"Bplist::Any","name":"Any","abstract":false,"superclass":{"html_id":"bplist/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"bplist/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"bplist/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/bplist/any.cr","line_number":1,"url":"https://github.com/mamantoha/crystal-bplist/blob/fd885be48eafe888ea4de58dd97580071a15f2f0/src/bplist/any.cr#L1"}],"repository_name":"bplist","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"bplist/Bplist","kind":"module","full_name":"Bplist","name":"Bplist"},"class_methods":[{"html_id":"convert(value:_):Bplist::Any-class-method","name":"convert","doc":"Method to convert a value to the `Bplist::Any` type","summary":"<p>Method to convert a value to the <code><a href=\"../Bplist/Any.html\">Bplist::Any</a></code> type</p>","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"_"}],"args_string":"(value : _) : Bplist::Any","args_html":"(value : _) : <a href=\"../Bplist/Any.html\">Bplist::Any</a>","location":{"filename":"src/bplist/any.cr","line_number":29,"url":"https://github.com/mamantoha/crystal-bplist/blob/fd885be48eafe888ea4de58dd97580071a15f2f0/src/bplist/any.cr#L29"},"def":{"name":"convert","args":[{"name":"value","external_name":"value","restriction":"_"}],"return_type":"Bplist::Any","visibility":"Public","body":"case value\nwhen Array\n  converted_array = value.map do |item|\n    convert(item)\n  end\n\n  Bplist::Any.new(converted_array)\nwhen Hash\n  converted_hash = Hash(String, Bplist::Any).new\n  value.each do |key, val|\n    converted_hash[key] = convert(val)\n  end\n\n  Bplist::Any.new(converted_hash)\nwhen Bplist::Any::ValueType\n  Bplist::Any.new(value)\nwhen Bplist::Any\n  value\nelse\n  raise(Bplist::Error.new(\"Unsupported type: #{value.class}\"))\nend"},"external_var":false}],"constructors":[{"html_id":"new(raw:Type)-class-method","name":"new","doc":"Creates a `Bplist::Any` that wraps the given value.","summary":"<p>Creates a <code><a href=\"../Bplist/Any.html\">Bplist::Any</a></code> that wraps the given value.</p>","abstract":false,"args":[{"name":"raw","external_name":"raw","restriction":"Type"}],"args_string":"(raw : Type)","args_html":"(raw : <a href=\"../Bplist/Any/Type.html\">Type</a>)","location":{"filename":"src/bplist/any.cr","line_number":25,"url":"https://github.com/mamantoha/crystal-bplist/blob/fd885be48eafe888ea4de58dd97580071a15f2f0/src/bplist/any.cr#L25"},"def":{"name":"new","args":[{"name":"raw","external_name":"raw","restriction":"Type"}],"visibility":"Public","body":"_ = allocate\n_.initialize(raw)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"==(other:Bplist::Any)-instance-method","name":"==","doc":"Returns `true` if both `self` and *other*'s raw object are equal.","summary":"<p>Returns <code>true</code> if both <code>self</code> and <em>other</em>'s raw object are equal.</p>","abstract":false,"args":[{"name":"other","external_name":"other","restriction":"Bplist::Any"}],"args_string":"(other : Bplist::Any)","args_html":"(other : <a href=\"../Bplist/Any.html\">Bplist::Any</a>)","location":{"filename":"src/bplist/any.cr","line_number":305,"url":"https://github.com/mamantoha/crystal-bplist/blob/fd885be48eafe888ea4de58dd97580071a15f2f0/src/bplist/any.cr#L305"},"def":{"name":"==","args":[{"name":"other","external_name":"other","restriction":"Bplist::Any"}],"visibility":"Public","body":"raw == other.raw"},"external_var":false},{"html_id":"==(other)-instance-method","name":"==","doc":"Returns `true` if the raw object is equal to *other*.","summary":"<p>Returns <code>true</code> if the raw object is equal to <em>other</em>.</p>","abstract":false,"args":[{"name":"other","external_name":"other","restriction":""}],"args_string":"(other)","args_html":"(other)","location":{"filename":"src/bplist/any.cr","line_number":310,"url":"https://github.com/mamantoha/crystal-bplist/blob/fd885be48eafe888ea4de58dd97580071a15f2f0/src/bplist/any.cr#L310"},"def":{"name":"==","args":[{"name":"other","external_name":"other","restriction":""}],"visibility":"Public","body":"raw == other"},"external_var":false},{"html_id":"[](index:Int):Bplist::Any-instance-method","name":"[]","doc":"Assumes the underlying value is an `Array` and returns the element\nat the given index.\nRaises if the underlying value is not an `Array`.","summary":"<p>Assumes the underlying value is an <code>Array</code> and returns the element at the given index.</p>","abstract":false,"args":[{"name":"index","external_name":"index","restriction":"Int"}],"args_string":"(index : Int) : Bplist::Any","args_html":"(index : Int) : <a href=\"../Bplist/Any.html\">Bplist::Any</a>","location":{"filename":"src/bplist/any.cr","line_number":58,"url":"https://github.com/mamantoha/crystal-bplist/blob/fd885be48eafe888ea4de58dd97580071a15f2f0/src/bplist/any.cr#L58"},"def":{"name":"[]","args":[{"name":"index","external_name":"index","restriction":"Int"}],"return_type":"Bplist::Any","visibility":"Public","body":"case object = @raw\nwhen Array\n  object[index]\nelse\n  raise(Bplist::Error.new(\"Expected Array for #[](index : Int), not #{object.class}\"))\nend"},"external_var":false},{"html_id":"[](key:String):Bplist::Any-instance-method","name":"[]","doc":"Assumes the underlying value is a `Hash` and returns the element\nwith the given key.\nRaises if the underlying value is not a `Hash`.","summary":"<p>Assumes the underlying value is a <code>Hash</code> and returns the element with the given key.</p>","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"String"}],"args_string":"(key : String) : Bplist::Any","args_html":"(key : String) : <a href=\"../Bplist/Any.html\">Bplist::Any</a>","location":{"filename":"src/bplist/any.cr","line_number":82,"url":"https://github.com/mamantoha/crystal-bplist/blob/fd885be48eafe888ea4de58dd97580071a15f2f0/src/bplist/any.cr#L82"},"def":{"name":"[]","args":[{"name":"key","external_name":"key","restriction":"String"}],"return_type":"Bplist::Any","visibility":"Public","body":"case object = @raw\nwhen Hash\n  object[key]\nelse\n  raise(Bplist::Error.new(\"Expected Hash for #[](key : String), not #{object.class}\"))\nend"},"external_var":false},{"html_id":"[]?(index:Int):Bplist::Any|Nil-instance-method","name":"[]?","doc":"Assumes the underlying value is an `Array` and returns the element\nat the given index, or `nil` if out of bounds.\nRaises if the underlying value is not an `Array`.","summary":"<p>Assumes the underlying value is an <code>Array</code> and returns the element at the given index, or <code>nil</code> if out of bounds.</p>","abstract":false,"args":[{"name":"index","external_name":"index","restriction":"Int"}],"args_string":"(index : Int) : Bplist::Any | Nil","args_html":"(index : Int) : <a href=\"../Bplist/Any.html\">Bplist::Any</a> | Nil","location":{"filename":"src/bplist/any.cr","line_number":70,"url":"https://github.com/mamantoha/crystal-bplist/blob/fd885be48eafe888ea4de58dd97580071a15f2f0/src/bplist/any.cr#L70"},"def":{"name":"[]?","args":[{"name":"index","external_name":"index","restriction":"Int"}],"return_type":"Bplist::Any | ::Nil","visibility":"Public","body":"case object = @raw\nwhen Array\n  object[index]?\nelse\n  raise(Bplist::Error.new(\"Expected Array for #[]?(index : Int), not #{object.class}\"))\nend"},"external_var":false},{"html_id":"[]?(key:String):Bplist::Any|Nil-instance-method","name":"[]?","doc":"Assumes the underlying value is a `Hash` and returns the element\nwith the given key, or `nil` if the key is not present.\nRaises if the underlying value is not a `Hash`.","summary":"<p>Assumes the underlying value is a <code>Hash</code> and returns the element with the given key, or <code>nil</code> if the key is not present.</p>","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"String"}],"args_string":"(key : String) : Bplist::Any | Nil","args_html":"(key : String) : <a href=\"../Bplist/Any.html\">Bplist::Any</a> | Nil","location":{"filename":"src/bplist/any.cr","line_number":94,"url":"https://github.com/mamantoha/crystal-bplist/blob/fd885be48eafe888ea4de58dd97580071a15f2f0/src/bplist/any.cr#L94"},"def":{"name":"[]?","args":[{"name":"key","external_name":"key","restriction":"String"}],"return_type":"Bplist::Any | ::Nil","visibility":"Public","body":"case object = @raw\nwhen Hash\n  object[key]?\nelse\n  raise(Bplist::Error.new(\"Expected Hash for #[]?(key : String), not #{object.class}\"))\nend"},"external_var":false},{"html_id":"as_a:Array(Bplist::Any)-instance-method","name":"as_a","doc":"Checks that the underlying value is `Array`, and returns its value.\nRaises otherwise.","summary":"<p>Checks that the underlying value is <code>Array</code>, and returns its value.</p>","abstract":false,"location":{"filename":"src/bplist/any.cr","line_number":231,"url":"https://github.com/mamantoha/crystal-bplist/blob/fd885be48eafe888ea4de58dd97580071a15f2f0/src/bplist/any.cr#L231"},"def":{"name":"as_a","return_type":"Array(Bplist::Any)","visibility":"Public","body":"@raw.as(Array)"},"external_var":false},{"html_id":"as_a?:Array(Bplist::Any)|Nil-instance-method","name":"as_a?","doc":"Checks that the underlying value is `Array`, and returns its value.\nReturns `nil` otherwise.","summary":"<p>Checks that the underlying value is <code>Array</code>, and returns its value.</p>","abstract":false,"location":{"filename":"src/bplist/any.cr","line_number":237,"url":"https://github.com/mamantoha/crystal-bplist/blob/fd885be48eafe888ea4de58dd97580071a15f2f0/src/bplist/any.cr#L237"},"def":{"name":"as_a?","return_type":"Array(Bplist::Any) | ::Nil","visibility":"Public","body":"@raw.as?(Array)"},"external_var":false},{"html_id":"as_bytes:Slice(UInt8)-instance-method","name":"as_bytes","doc":"Checks that the underlying value is `Slice(UInt8)`, and returns its value.\nRaises otherwise.","summary":"<p>Checks that the underlying value is <code>Slice(UInt8)</code>, and returns its value.</p>","abstract":false,"location":{"filename":"src/bplist/any.cr","line_number":213,"url":"https://github.com/mamantoha/crystal-bplist/blob/fd885be48eafe888ea4de58dd97580071a15f2f0/src/bplist/any.cr#L213"},"def":{"name":"as_bytes","return_type":"Slice(UInt8)","visibility":"Public","body":"@raw.as(Slice(UInt8))"},"external_var":false},{"html_id":"as_bytes?:Slice(UInt8)|Nil-instance-method","name":"as_bytes?","doc":"Checks that the underlying value is `Slice(UInt8)`, and returns its value.\nReturns `nil` otherwise.","summary":"<p>Checks that the underlying value is <code>Slice(UInt8)</code>, and returns its value.</p>","abstract":false,"location":{"filename":"src/bplist/any.cr","line_number":219,"url":"https://github.com/mamantoha/crystal-bplist/blob/fd885be48eafe888ea4de58dd97580071a15f2f0/src/bplist/any.cr#L219"},"def":{"name":"as_bytes?","return_type":"Slice(UInt8) | ::Nil","visibility":"Public","body":"if @raw.is_a?(Slice(UInt8))\n  as_bytes\nend"},"external_var":false},{"html_id":"as_f:Float64-instance-method","name":"as_f","doc":"Checks that the underlying value is `Float` (or `Int`), and returns its value as an `Float64`.\nRaises otherwise.","summary":"<p>Checks that the underlying value is <code>Float</code> (or <code>Int</code>), and returns its value as an <code>Float64</code>.</p>","abstract":false,"location":{"filename":"src/bplist/any.cr","line_number":155,"url":"https://github.com/mamantoha/crystal-bplist/blob/fd885be48eafe888ea4de58dd97580071a15f2f0/src/bplist/any.cr#L155"},"def":{"name":"as_f","return_type":"Float64","visibility":"Public","body":"case raw = @raw\nwhen Int\n  raw.to_f\nelse\n  raw.as(Float64)\nend"},"external_var":false},{"html_id":"as_f32:Float32-instance-method","name":"as_f32","doc":"Checks that the underlying value is `Float` (or `Int`), and returns its value as an `Float32`.\nRaises otherwise.","summary":"<p>Checks that the underlying value is <code>Float</code> (or <code>Int</code>), and returns its value as an <code>Float32</code>.</p>","abstract":false,"location":{"filename":"src/bplist/any.cr","line_number":177,"url":"https://github.com/mamantoha/crystal-bplist/blob/fd885be48eafe888ea4de58dd97580071a15f2f0/src/bplist/any.cr#L177"},"def":{"name":"as_f32","return_type":"Float32","visibility":"Public","body":"case raw = @raw\nwhen Int\n  raw.to_f32\nelse\n  (raw.as(Float)).to_f32\nend"},"external_var":false},{"html_id":"as_f32?:Float32|Nil-instance-method","name":"as_f32?","doc":"Checks that the underlying value is `Float` (or `Int`), and returns its value as an `Float32`.\nReturns `nil` otherwise.","summary":"<p>Checks that the underlying value is <code>Float</code> (or <code>Int</code>), and returns its value as an <code>Float32</code>.</p>","abstract":false,"location":{"filename":"src/bplist/any.cr","line_number":188,"url":"https://github.com/mamantoha/crystal-bplist/blob/fd885be48eafe888ea4de58dd97580071a15f2f0/src/bplist/any.cr#L188"},"def":{"name":"as_f32?","return_type":"Float32 | ::Nil","visibility":"Public","body":"case raw = @raw\nwhen Int\n  raw.to_f32\nwhen Float\n  raw.to_f32\nelse\n  nil\nend"},"external_var":false},{"html_id":"as_f?:Float64|Nil-instance-method","name":"as_f?","doc":"Checks that the underlying value is `Float` (or `Int`), and returns its value as an `Float64`.\nReturns `nil` otherwise.","summary":"<p>Checks that the underlying value is <code>Float</code> (or <code>Int</code>), and returns its value as an <code>Float64</code>.</p>","abstract":false,"location":{"filename":"src/bplist/any.cr","line_number":166,"url":"https://github.com/mamantoha/crystal-bplist/blob/fd885be48eafe888ea4de58dd97580071a15f2f0/src/bplist/any.cr#L166"},"def":{"name":"as_f?","return_type":"Float64 | ::Nil","visibility":"Public","body":"case raw = @raw\nwhen Int\n  raw.to_f\nelse\n  raw.as?(Float64)\nend"},"external_var":false},{"html_id":"as_h:Hash(String,Bplist::Any)-instance-method","name":"as_h","doc":"Checks that the underlying value is `Hash`, and returns its value.\nRaises otherwise.","summary":"<p>Checks that the underlying value is <code>Hash</code>, and returns its value.</p>","abstract":false,"location":{"filename":"src/bplist/any.cr","line_number":225,"url":"https://github.com/mamantoha/crystal-bplist/blob/fd885be48eafe888ea4de58dd97580071a15f2f0/src/bplist/any.cr#L225"},"def":{"name":"as_h","return_type":"Hash(String, Bplist::Any)","visibility":"Public","body":"@raw.as(Hash)"},"external_var":false},{"html_id":"as_i:Int32-instance-method","name":"as_i","doc":"Checks that the underlying value is `Int`, and returns its value as an `Int32`.\nRaises otherwise.","summary":"<p>Checks that the underlying value is <code>Int</code>, and returns its value as an <code>Int32</code>.</p>","abstract":false,"location":{"filename":"src/bplist/any.cr","line_number":131,"url":"https://github.com/mamantoha/crystal-bplist/blob/fd885be48eafe888ea4de58dd97580071a15f2f0/src/bplist/any.cr#L131"},"def":{"name":"as_i","return_type":"Int32","visibility":"Public","body":"(@raw.as(Int)).to_i"},"external_var":false},{"html_id":"as_i64:Int64-instance-method","name":"as_i64","doc":"Checks that the underlying value is `Int`, and returns its value as an `Int64`.\nRaises otherwise.","summary":"<p>Checks that the underlying value is <code>Int</code>, and returns its value as an <code>Int64</code>.</p>","abstract":false,"location":{"filename":"src/bplist/any.cr","line_number":143,"url":"https://github.com/mamantoha/crystal-bplist/blob/fd885be48eafe888ea4de58dd97580071a15f2f0/src/bplist/any.cr#L143"},"def":{"name":"as_i64","return_type":"Int64","visibility":"Public","body":"(@raw.as(Int)).to_i64"},"external_var":false},{"html_id":"as_i64?:Int64|Nil-instance-method","name":"as_i64?","doc":"Checks that the underlying value is `Int`, and returns its value as an `Int64`.\nReturns `nil` otherwise.","summary":"<p>Checks that the underlying value is <code>Int</code>, and returns its value as an <code>Int64</code>.</p>","abstract":false,"location":{"filename":"src/bplist/any.cr","line_number":149,"url":"https://github.com/mamantoha/crystal-bplist/blob/fd885be48eafe888ea4de58dd97580071a15f2f0/src/bplist/any.cr#L149"},"def":{"name":"as_i64?","return_type":"Int64 | ::Nil","visibility":"Public","body":"if @raw.is_a?(Int64)\n  as_i64\nend"},"external_var":false},{"html_id":"as_i?:Int32|Nil-instance-method","name":"as_i?","doc":"Checks that the underlying value is `Int`, and returns its value as an `Int32`.\nReturns `nil` otherwise.","summary":"<p>Checks that the underlying value is <code>Int</code>, and returns its value as an <code>Int32</code>.</p>","abstract":false,"location":{"filename":"src/bplist/any.cr","line_number":137,"url":"https://github.com/mamantoha/crystal-bplist/blob/fd885be48eafe888ea4de58dd97580071a15f2f0/src/bplist/any.cr#L137"},"def":{"name":"as_i?","return_type":"Int32 | ::Nil","visibility":"Public","body":"if @raw.is_a?(Int)\n  as_i\nend"},"external_var":false},{"html_id":"as_s:String-instance-method","name":"as_s","doc":"Checks that the underlying value is `String`, and returns its value.\nRaises otherwise.","summary":"<p>Checks that the underlying value is <code>String</code>, and returns its value.</p>","abstract":false,"location":{"filename":"src/bplist/any.cr","line_number":201,"url":"https://github.com/mamantoha/crystal-bplist/blob/fd885be48eafe888ea4de58dd97580071a15f2f0/src/bplist/any.cr#L201"},"def":{"name":"as_s","return_type":"String","visibility":"Public","body":"@raw.as(String)"},"external_var":false},{"html_id":"as_s?:String|Nil-instance-method","name":"as_s?","doc":"Checks that the underlying value is `String`, and returns its value.\nReturns `nil` otherwise.","summary":"<p>Checks that the underlying value is <code>String</code>, and returns its value.</p>","abstract":false,"location":{"filename":"src/bplist/any.cr","line_number":207,"url":"https://github.com/mamantoha/crystal-bplist/blob/fd885be48eafe888ea4de58dd97580071a15f2f0/src/bplist/any.cr#L207"},"def":{"name":"as_s?","return_type":"String | ::Nil","visibility":"Public","body":"if @raw.is_a?(String)\n  as_s\nend"},"external_var":false},{"html_id":"dig(index_or_key:String|Int,*subkeys):Bplist::Any-instance-method","name":"dig","doc":"Traverses the depth of a structure and returns the value, otherwise raises.","summary":"<p>Traverses the depth of a structure and returns the value, otherwise raises.</p>","abstract":false,"args":[{"name":"index_or_key","external_name":"index_or_key","restriction":"String | Int"},{"name":"subkeys","external_name":"subkeys","restriction":""}],"args_string":"(index_or_key : String | Int, *subkeys) : Bplist::Any","args_html":"(index_or_key : String | Int, *subkeys) : <a href=\"../Bplist/Any.html\">Bplist::Any</a>","location":{"filename":"src/bplist/any.cr","line_number":120,"url":"https://github.com/mamantoha/crystal-bplist/blob/fd885be48eafe888ea4de58dd97580071a15f2f0/src/bplist/any.cr#L120"},"def":{"name":"dig","args":[{"name":"index_or_key","external_name":"index_or_key","restriction":"String | Int"},{"name":"subkeys","external_name":"subkeys","restriction":""}],"splat_index":1,"return_type":"Bplist::Any","visibility":"Public","body":"self[index_or_key].dig(*subkeys)"},"external_var":false},{"html_id":"dig?(index_or_key:String|Int,*subkeys):Bplist::Any|Nil-instance-method","name":"dig?","doc":"Traverses the depth of a structure and returns the value.\nReturns `nil` if not found.","summary":"<p>Traverses the depth of a structure and returns the value.</p>","abstract":false,"args":[{"name":"index_or_key","external_name":"index_or_key","restriction":"String | Int"},{"name":"subkeys","external_name":"subkeys","restriction":""}],"args_string":"(index_or_key : String | Int, *subkeys) : Bplist::Any | Nil","args_html":"(index_or_key : String | Int, *subkeys) : <a href=\"../Bplist/Any.html\">Bplist::Any</a> | Nil","location":{"filename":"src/bplist/any.cr","line_number":105,"url":"https://github.com/mamantoha/crystal-bplist/blob/fd885be48eafe888ea4de58dd97580071a15f2f0/src/bplist/any.cr#L105"},"def":{"name":"dig?","args":[{"name":"index_or_key","external_name":"index_or_key","restriction":"String | Int"},{"name":"subkeys","external_name":"subkeys","restriction":""}],"splat_index":1,"return_type":"Bplist::Any | ::Nil","visibility":"Public","body":"self[index_or_key]?.try(&.dig?(*subkeys))"},"external_var":false},{"html_id":"hash(hasher)-instance-method","name":"hash","doc":"See `Object#hash(hasher)`","summary":"<p>See <code>Object#hash(hasher)</code></p>","abstract":false,"args":[{"name":"hasher","external_name":"hasher","restriction":""}],"args_string":"(hasher)","args_html":"(hasher)","location":{"filename":"src/bplist/any.cr","line_number":314,"url":"https://github.com/mamantoha/crystal-bplist/blob/fd885be48eafe888ea4de58dd97580071a15f2f0/src/bplist/any.cr#L314"},"def":{"name":"hash","args":[{"name":"hasher","external_name":"hasher","restriction":""}],"visibility":"Public","body":"hasher = raw.hash(hasher)\n\nhasher\n"},"external_var":false},{"html_id":"inspect(io:IO):Nil-instance-method","name":"inspect","doc":"Appends a String representation of this object\nwhich includes its class name, its object address\nand the values of all instance variables.\n\n```\nclass Person\n  def initialize(@name : String, @age : Int32)\n  end\nend\n\nPerson.new(\"John\", 32).inspect # => #<Person:0x10fd31f20 @name=\"John\", @age=32>\n```","summary":"<p>Appends a String representation of this object which includes its class name, its object address and the values of all instance variables.</p>","abstract":false,"args":[{"name":"io","external_name":"io","restriction":"IO"}],"args_string":"(io : IO) : Nil","args_html":"(io : IO) : Nil","location":{"filename":"src/bplist/any.cr","line_number":292,"url":"https://github.com/mamantoha/crystal-bplist/blob/fd885be48eafe888ea4de58dd97580071a15f2f0/src/bplist/any.cr#L292"},"def":{"name":"inspect","args":[{"name":"io","external_name":"io","restriction":"IO"}],"return_type":"Nil","visibility":"Public","body":"@raw.inspect(io)"},"external_var":false},{"html_id":"pretty_print(pp)-instance-method","name":"pretty_print","abstract":false,"args":[{"name":"pp","external_name":"pp","restriction":""}],"args_string":"(pp)","args_html":"(pp)","location":{"filename":"src/bplist/any.cr","line_number":300,"url":"https://github.com/mamantoha/crystal-bplist/blob/fd885be48eafe888ea4de58dd97580071a15f2f0/src/bplist/any.cr#L300"},"def":{"name":"pretty_print","args":[{"name":"pp","external_name":"pp","restriction":""}],"visibility":"Public","body":"@raw.pretty_print(pp)"},"external_var":false},{"html_id":"raw:Type-instance-method","name":"raw","doc":"Returns the raw underlying value.","summary":"<p>Returns the raw underlying value.</p>","abstract":false,"location":{"filename":"src/bplist/any.cr","line_number":22,"url":"https://github.com/mamantoha/crystal-bplist/blob/fd885be48eafe888ea4de58dd97580071a15f2f0/src/bplist/any.cr#L22"},"def":{"name":"raw","return_type":"Type","visibility":"Public","body":"@raw"},"external_var":false},{"html_id":"to_a-instance-method","name":"to_a","doc":"Converts the Bplist::Any to a regular Crystal Array that can be modified.\nRecursively converts nested Bplist::Any objects to their native types.","summary":"<p>Converts the Bplist::Any to a regular Crystal Array that can be modified.</p>","abstract":false,"location":{"filename":"src/bplist/any.cr","line_number":258,"url":"https://github.com/mamantoha/crystal-bplist/blob/fd885be48eafe888ea4de58dd97580071a15f2f0/src/bplist/any.cr#L258"},"def":{"name":"to_a","visibility":"Public","body":"case @raw\nwhen Array\n  result = [] of NativeType\n  (@raw.as(Array)).each do |item|\n    result << (item.to_any.as(NativeType))\n  end\n  result\nelse\n  raise(Bplist::Error.new(\"Expected Array for #to_a, not #{@raw.class}\"))\nend"},"external_var":false},{"html_id":"to_any-instance-method","name":"to_any","doc":"Converts the Bplist::Any to its native Crystal type.\nRecursively converts nested Bplist::Any objects to their native types.","summary":"<p>Converts the Bplist::Any to its native Crystal type.</p>","abstract":false,"location":{"filename":"src/bplist/any.cr","line_number":273,"url":"https://github.com/mamantoha/crystal-bplist/blob/fd885be48eafe888ea4de58dd97580071a15f2f0/src/bplist/any.cr#L273"},"def":{"name":"to_any","visibility":"Public","body":"case @raw\nwhen Hash\n  result = {} of String => NativeType\n  (@raw.as(Hash)).each do |key, value|\n    result[key] = value.to_any.as(NativeType)\n  end\n  result\nwhen Array\n  result = [] of NativeType\n  (@raw.as(Array)).each do |item|\n    result << (item.to_any.as(NativeType))\n  end\n  result\nelse\n  @raw\nend"},"external_var":false},{"html_id":"to_h-instance-method","name":"to_h","doc":"Converts the Bplist::Any to a regular Crystal Hash that can be modified.\nRecursively converts nested Bplist::Any objects to their native types.","summary":"<p>Converts the Bplist::Any to a regular Crystal Hash that can be modified.</p>","abstract":false,"location":{"filename":"src/bplist/any.cr","line_number":243,"url":"https://github.com/mamantoha/crystal-bplist/blob/fd885be48eafe888ea4de58dd97580071a15f2f0/src/bplist/any.cr#L243"},"def":{"name":"to_h","visibility":"Public","body":"case @raw\nwhen Hash\n  result = {} of String => NativeType\n  (@raw.as(Hash)).each do |key, value|\n    result[key] = value.to_any.as(NativeType)\n  end\n  result\nelse\n  raise(Bplist::Error.new(\"Expected Hash for #to_h, not #{@raw.class}\"))\nend"},"external_var":false},{"html_id":"to_s(io:IO):Nil-instance-method","name":"to_s","doc":"Appends a short String representation of this object\nwhich includes its class name and its object address.\n\n```\nclass Person\n  def initialize(@name : String, @age : Int32)\n  end\nend\n\nPerson.new(\"John\", 32).to_s # => #<Person:0x10a199f20>\n```","summary":"<p>Appends a short String representation of this object which includes its class name and its object address.</p>","abstract":false,"args":[{"name":"io","external_name":"io","restriction":"IO"}],"args_string":"(io : IO) : Nil","args_html":"(io : IO) : Nil","location":{"filename":"src/bplist/any.cr","line_number":296,"url":"https://github.com/mamantoha/crystal-bplist/blob/fd885be48eafe888ea4de58dd97580071a15f2f0/src/bplist/any.cr#L296"},"def":{"name":"to_s","args":[{"name":"io","external_name":"io","restriction":"IO"}],"return_type":"Nil","visibility":"Public","body":"@raw.to_s(io)"},"external_var":false}],"types":[{"html_id":"bplist/Bplist/Any/NativeType","path":"Bplist/Any/NativeType.html","kind":"alias","full_name":"Bplist::Any::NativeType","name":"NativeType","abstract":false,"locations":[{"filename":"src/bplist/any.cr","line_number":19,"url":"https://github.com/mamantoha/crystal-bplist/blob/fd885be48eafe888ea4de58dd97580071a15f2f0/src/bplist/any.cr#L19"}],"repository_name":"bplist","program":false,"enum":false,"alias":true,"aliased":"(Array(Bplist::Any::NativeType) | Bool | Float32 | Float64 | Hash(String, Bplist::Any::NativeType) | Int128 | Int16 | Int32 | Int64 | Int8 | Slice(UInt8) | String | Time | Nil)","aliased_html":"Array(<a href=\"../../Bplist/Any/NativeType.html\">Bplist::Any::NativeType</a>) | Bool | Float32 | Float64 | Hash(String, <a href=\"../../Bplist/Any/NativeType.html\">Bplist::Any::NativeType</a>) | Int128 | Int16 | Int32 | Int64 | Int8 | Slice(UInt8) | String | Time | Nil","const":false,"namespace":{"html_id":"bplist/Bplist/Any","kind":"class","full_name":"Bplist::Any","name":"Any"},"doc":"Native Crystal types for conversion","summary":"<p>Native Crystal types for conversion</p>"},{"html_id":"bplist/Bplist/Any/Type","path":"Bplist/Any/Type.html","kind":"alias","full_name":"Bplist::Any::Type","name":"Type","abstract":false,"locations":[{"filename":"src/bplist/any.cr","line_number":3,"url":"https://github.com/mamantoha/crystal-bplist/blob/fd885be48eafe888ea4de58dd97580071a15f2f0/src/bplist/any.cr#L3"}],"repository_name":"bplist","program":false,"enum":false,"alias":true,"aliased":"(Array(Bplist::Any) | Bool | Float32 | Float64 | Hash(String, Bplist::Any) | Int128 | Int16 | Int32 | Int64 | Int8 | Slice(UInt8) | String | Time | Nil)","aliased_html":"Array(<a href=\"../../Bplist/Any.html\">Bplist::Any</a>) | Bool | Float32 | Float64 | Hash(String, <a href=\"../../Bplist/Any.html\">Bplist::Any</a>) | Int128 | Int16 | Int32 | Int64 | Int8 | Slice(UInt8) | String | Time | Nil","const":false,"namespace":{"html_id":"bplist/Bplist/Any","kind":"class","full_name":"Bplist::Any","name":"Any"},"doc":"All possible Bplist types.","summary":"<p>All possible Bplist types.</p>"},{"html_id":"bplist/Bplist/Any/ValueType","path":"Bplist/Any/ValueType.html","kind":"alias","full_name":"Bplist::Any::ValueType","name":"ValueType","abstract":false,"locations":[{"filename":"src/bplist/any.cr","line_number":5,"url":"https://github.com/mamantoha/crystal-bplist/blob/fd885be48eafe888ea4de58dd97580071a15f2f0/src/bplist/any.cr#L5"}],"repository_name":"bplist","program":false,"enum":false,"alias":true,"aliased":"(Bool | Float32 | Float64 | Int128 | Int16 | Int32 | Int64 | Int8 | Slice(UInt8) | String | Time | Nil)","aliased_html":"Bool | Float32 | Float64 | Int128 | Int16 | Int32 | Int64 | Int8 | Slice(UInt8) | String | Time | Nil","const":false,"namespace":{"html_id":"bplist/Bplist/Any","kind":"class","full_name":"Bplist::Any","name":"Any"}}]},{"html_id":"bplist/Bplist/Error","path":"Bplist/Error.html","kind":"class","full_name":"Bplist::Error","name":"Error","abstract":false,"superclass":{"html_id":"bplist/Exception","kind":"class","full_name":"Exception","name":"Exception"},"ancestors":[{"html_id":"bplist/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"bplist/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"bplist/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/bplist.cr","line_number":8,"url":"https://github.com/mamantoha/crystal-bplist/blob/fd885be48eafe888ea4de58dd97580071a15f2f0/src/bplist.cr#L8"}],"repository_name":"bplist","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"bplist/Bplist","kind":"module","full_name":"Bplist","name":"Bplist"},"doc":"Generic Bplist error.","summary":"<p>Generic Bplist error.</p>"},{"html_id":"bplist/Bplist/Helpers","path":"Bplist/Helpers.html","kind":"module","full_name":"Bplist::Helpers","name":"Helpers","abstract":false,"locations":[{"filename":"src/bplist/helpers.cr","line_number":2,"url":"https://github.com/mamantoha/crystal-bplist/blob/fd885be48eafe888ea4de58dd97580071a15f2f0/src/bplist/helpers.cr#L2"}],"repository_name":"bplist","program":false,"enum":false,"alias":false,"const":false,"extended_modules":[{"html_id":"bplist/Bplist/Helpers","kind":"module","full_name":"Bplist::Helpers","name":"Helpers"}],"including_types":[{"html_id":"bplist/Bplist/Parser","kind":"class","full_name":"Bplist::Parser","name":"Parser"},{"html_id":"bplist/Bplist/Writer","kind":"class","full_name":"Bplist::Writer","name":"Writer"}],"namespace":{"html_id":"bplist/Bplist","kind":"module","full_name":"Bplist","name":"Bplist"},"instance_methods":[{"html_id":"debug_print(object)-instance-method","name":"debug_print","abstract":false,"args":[{"name":"object","external_name":"object","restriction":""}],"args_string":"(object)","args_html":"(object)","location":{"filename":"src/bplist/helpers.cr","line_number":5,"url":"https://github.com/mamantoha/crystal-bplist/blob/fd885be48eafe888ea4de58dd97580071a15f2f0/src/bplist/helpers.cr#L5"},"def":{"name":"debug_print","args":[{"name":"object","external_name":"object","restriction":""}],"visibility":"Public","body":"if self.class.debug?\n  p!(object)\nend"},"external_var":false}]},{"html_id":"bplist/Bplist/Parser","path":"Bplist/Parser.html","kind":"class","full_name":"Bplist::Parser","name":"Parser","abstract":false,"superclass":{"html_id":"bplist/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"bplist/Bplist/Helpers","kind":"module","full_name":"Bplist::Helpers","name":"Helpers"},{"html_id":"bplist/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"bplist/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/bplist/parser.cr","line_number":2,"url":"https://github.com/mamantoha/crystal-bplist/blob/fd885be48eafe888ea4de58dd97580071a15f2f0/src/bplist/parser.cr#L2"}],"repository_name":"bplist","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"HEADER_SIZE","name":"HEADER_SIZE","value":"8"},{"id":"TRAILER_NUM_OBJECTS_OFFSET","name":"TRAILER_NUM_OBJECTS_OFFSET","value":"8"},{"id":"TRAILER_OBJECT_REF_SIZE_OFFSET","name":"TRAILER_OBJECT_REF_SIZE_OFFSET","value":"7"},{"id":"TRAILER_OFFSET_SIZE_OFFSET","name":"TRAILER_OFFSET_SIZE_OFFSET","value":"6"},{"id":"TRAILER_OFFSET_TABLE_OFFSET","name":"TRAILER_OFFSET_TABLE_OFFSET","value":"24"},{"id":"TRAILER_SIZE","name":"TRAILER_SIZE","value":"32"},{"id":"TRAILER_TOP_OBJECT_OFFSET","name":"TRAILER_TOP_OBJECT_OFFSET","value":"16"}],"included_modules":[{"html_id":"bplist/Bplist/Helpers","kind":"module","full_name":"Bplist::Helpers","name":"Helpers"}],"namespace":{"html_id":"bplist/Bplist","kind":"module","full_name":"Bplist","name":"Bplist"},"class_methods":[{"html_id":"debug=(debug:Bool)-class-method","name":"debug=","abstract":false,"args":[{"name":"debug","external_name":"debug","restriction":"::Bool"}],"args_string":"(debug : Bool)","args_html":"(debug : Bool)","location":{"filename":"src/bplist/parser.cr","line_number":22,"url":"https://github.com/mamantoha/crystal-bplist/blob/fd885be48eafe888ea4de58dd97580071a15f2f0/src/bplist/parser.cr#L22"},"def":{"name":"debug=","args":[{"name":"debug","external_name":"debug","restriction":"::Bool"}],"visibility":"Public","body":"@@debug = debug"},"external_var":false},{"html_id":"debug?-class-method","name":"debug?","abstract":false,"location":{"filename":"src/bplist/parser.cr","line_number":22,"url":"https://github.com/mamantoha/crystal-bplist/blob/fd885be48eafe888ea4de58dd97580071a15f2f0/src/bplist/parser.cr#L22"},"def":{"name":"debug?","visibility":"Public","body":"@@debug"},"external_var":false},{"html_id":"parse(value:IO|String|Bytes):Bplist::Any-class-method","name":"parse","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"IO | String | Bytes"}],"args_string":"(value : IO | String | Bytes) : Bplist::Any","args_html":"(value : IO | String | Bytes) : <a href=\"../Bplist/Any.html\">Bplist::Any</a>","location":{"filename":"src/bplist/parser.cr","line_number":24,"url":"https://github.com/mamantoha/crystal-bplist/blob/fd885be48eafe888ea4de58dd97580071a15f2f0/src/bplist/parser.cr#L24"},"def":{"name":"parse","args":[{"name":"value","external_name":"value","restriction":"IO | String | Bytes"}],"return_type":"Bplist::Any","visibility":"Public","body":"bplist = new(value)\nbplist.parse\n"},"external_var":false}],"constructors":[{"html_id":"new(io:IO)-class-method","name":"new","abstract":false,"args":[{"name":"io","external_name":"io","restriction":"IO"}],"args_string":"(io : IO)","args_html":"(io : IO)","location":{"filename":"src/bplist/parser.cr","line_number":29,"url":"https://github.com/mamantoha/crystal-bplist/blob/fd885be48eafe888ea4de58dd97580071a15f2f0/src/bplist/parser.cr#L29"},"def":{"name":"new","args":[{"name":"io","external_name":"io","restriction":"IO"}],"visibility":"Public","body":"_ = allocate\n_.initialize(io)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false},{"html_id":"new(file_path:String)-class-method","name":"new","abstract":false,"args":[{"name":"file_path","external_name":"file_path","restriction":"String"}],"args_string":"(file_path : String)","args_html":"(file_path : String)","location":{"filename":"src/bplist/parser.cr","line_number":45,"url":"https://github.com/mamantoha/crystal-bplist/blob/fd885be48eafe888ea4de58dd97580071a15f2f0/src/bplist/parser.cr#L45"},"def":{"name":"new","args":[{"name":"file_path","external_name":"file_path","restriction":"String"}],"visibility":"Public","body":"file = File.open(file_path, \"r\")\n\nnew(file)\n"},"external_var":false},{"html_id":"new(bytes:Bytes)-class-method","name":"new","abstract":false,"args":[{"name":"bytes","external_name":"bytes","restriction":"Bytes"}],"args_string":"(bytes : Bytes)","args_html":"(bytes : Bytes)","location":{"filename":"src/bplist/parser.cr","line_number":51,"url":"https://github.com/mamantoha/crystal-bplist/blob/fd885be48eafe888ea4de58dd97580071a15f2f0/src/bplist/parser.cr#L51"},"def":{"name":"new","args":[{"name":"bytes","external_name":"bytes","restriction":"Bytes"}],"visibility":"Public","body":"io = IO::Memory.new(bytes)\nnew(io)\n"},"external_var":false}],"instance_methods":[{"html_id":"parse:Bplist::Any-instance-method","name":"parse","abstract":false,"location":{"filename":"src/bplist/parser.cr","line_number":56,"url":"https://github.com/mamantoha/crystal-bplist/blob/fd885be48eafe888ea4de58dd97580071a15f2f0/src/bplist/parser.cr#L56"},"def":{"name":"parse","return_type":"Bplist::Any","visibility":"Public","body":"top_object_offset = @offsets[@trailer_info[:top_object].to_i]\n\n\nparse_object_at_index(top_object_offset)\n"},"external_var":false},{"html_id":"print_objects-instance-method","name":"print_objects","abstract":false,"location":{"filename":"src/bplist/parser.cr","line_number":316,"url":"https://github.com/mamantoha/crystal-bplist/blob/fd885be48eafe888ea4de58dd97580071a15f2f0/src/bplist/parser.cr#L316"},"def":{"name":"print_objects","visibility":"Public","body":"@offsets.each_with_index do |offset, index|\n  @io.seek(offset.to_i64)\n  type_byte = Bytes.new(1)\n  @io.read(type_byte)\n\n  object = parse_object(type_byte[0])\n\n  if object.raw.is_a?(Bplist::Any::ValueType)\n    puts(\"Object #{index + 1} - #{object.raw.class}: `#{object.inspect}`\")\n  elsif object.raw.is_a?(Hash)\n    puts(\"Object #{index + 1} - #{object.raw.class}: `#{object.as_h.keys}`\")\n  else\n    puts(\"Object #{index + 1} - #{object.raw.class}:\")\n  end\nend"},"external_var":false}]},{"html_id":"bplist/Bplist/Writer","path":"Bplist/Writer.html","kind":"class","full_name":"Bplist::Writer","name":"Writer","abstract":false,"superclass":{"html_id":"bplist/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"bplist/Bplist/Helpers","kind":"module","full_name":"Bplist::Helpers","name":"Helpers"},{"html_id":"bplist/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"bplist/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/bplist/writer.cr","line_number":2,"url":"https://github.com/mamantoha/crystal-bplist/blob/fd885be48eafe888ea4de58dd97580071a15f2f0/src/bplist/writer.cr#L2"}],"repository_name":"bplist","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"bplist/Bplist/Helpers","kind":"module","full_name":"Bplist::Helpers","name":"Helpers"}],"namespace":{"html_id":"bplist/Bplist","kind":"module","full_name":"Bplist","name":"Bplist"},"class_methods":[{"html_id":"debug=(debug:Bool)-class-method","name":"debug=","abstract":false,"args":[{"name":"debug","external_name":"debug","restriction":"::Bool"}],"args_string":"(debug : Bool)","args_html":"(debug : Bool)","location":{"filename":"src/bplist/writer.cr","line_number":10,"url":"https://github.com/mamantoha/crystal-bplist/blob/fd885be48eafe888ea4de58dd97580071a15f2f0/src/bplist/writer.cr#L10"},"def":{"name":"debug=","args":[{"name":"debug","external_name":"debug","restriction":"::Bool"}],"visibility":"Public","body":"@@debug = debug"},"external_var":false},{"html_id":"debug?-class-method","name":"debug?","abstract":false,"location":{"filename":"src/bplist/writer.cr","line_number":10,"url":"https://github.com/mamantoha/crystal-bplist/blob/fd885be48eafe888ea4de58dd97580071a15f2f0/src/bplist/writer.cr#L10"},"def":{"name":"debug?","visibility":"Public","body":"@@debug"},"external_var":false}],"constructors":[{"html_id":"new(hash:Hash,compress:Bool=false)-class-method","name":"new","doc":"Initialize with a hash","summary":"<p>Initialize with a hash</p>","abstract":false,"args":[{"name":"hash","external_name":"hash","restriction":"Hash"},{"name":"compress","default_value":"false","external_name":"compress","restriction":"::Bool"}],"args_string":"(hash : Hash, compress : Bool = false)","args_html":"(hash : Hash, compress : Bool = <span class=\"n\">false</span>)","location":{"filename":"src/bplist/writer.cr","line_number":13,"url":"https://github.com/mamantoha/crystal-bplist/blob/fd885be48eafe888ea4de58dd97580071a15f2f0/src/bplist/writer.cr#L13"},"def":{"name":"new","args":[{"name":"hash","external_name":"hash","restriction":"Hash"},{"name":"compress","default_value":"false","external_name":"compress","restriction":"::Bool"}],"visibility":"Public","body":"_ = allocate\n_.initialize(hash, compress)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"io:IO::Memory-instance-method","name":"io","abstract":false,"location":{"filename":"src/bplist/writer.cr","line_number":8,"url":"https://github.com/mamantoha/crystal-bplist/blob/fd885be48eafe888ea4de58dd97580071a15f2f0/src/bplist/writer.cr#L8"},"def":{"name":"io","return_type":"IO::Memory","visibility":"Public","body":"@io"},"external_var":false},{"html_id":"print_objects-instance-method","name":"print_objects","abstract":false,"location":{"filename":"src/bplist/writer.cr","line_number":372,"url":"https://github.com/mamantoha/crystal-bplist/blob/fd885be48eafe888ea4de58dd97580071a15f2f0/src/bplist/writer.cr#L372"},"def":{"name":"print_objects","visibility":"Public","body":"@indexed_list.each_with_index do |element, i|\n  if element.raw.is_a?(Bplist::Any::ValueType)\n    puts(\"Object #{i + 1} - #{element.raw.class}: `#{element.inspect}`\")\n  elsif element.raw.is_a?(Hash)\n    puts(\"Object #{i + 1} - #{element.raw.class}: `#{element.as_h.keys}`\")\n  else\n    puts(\"Object #{i + 1} - #{element.raw.class}\")\n  end\nend"},"external_var":false},{"html_id":"write_to_file(file_path:String)-instance-method","name":"write_to_file","abstract":false,"args":[{"name":"file_path","external_name":"file_path","restriction":"String"}],"args_string":"(file_path : String)","args_html":"(file_path : String)","location":{"filename":"src/bplist/writer.cr","line_number":147,"url":"https://github.com/mamantoha/crystal-bplist/blob/fd885be48eafe888ea4de58dd97580071a15f2f0/src/bplist/writer.cr#L147"},"def":{"name":"write_to_file","args":[{"name":"file_path","external_name":"file_path","restriction":"String"}],"visibility":"Public","body":"File.open(file_path, \"wb\") do |file|\n  file.write(@io.to_slice)\nend"},"external_var":false}]}]}]}})